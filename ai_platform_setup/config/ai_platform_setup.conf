# Project Root and Core Directories
export PROJECT_ROOT="/workspaces/AI"
export CONFIG_DIR="${PROJECT_ROOT}/config"
export MODULES_DIR="${PROJECT_ROOT}/modules"
export RUNTIME_DIR="${PROJECT_ROOT}/runtime"
export LOG_DIR="${PROJECT_ROOT}/logs"

# Environment
export ENVIRONMENT="production"

# AGI Components
declare -a AGI_COMPONENTS=("openai-gpt" "neurosymbolic-ai")

# Notification Settings
export SLACK_WEBHOOK_URL="{SLACK_WEBHOOK_UR}"
export ADMIN_EMAIL="dislovemt@gmail.com"

# API Keys and Secrets
# It's recommended to export these as environment variables or use a secret manager
export AZURE_OPENAI_KEY="${AZURE_OPENAI_KEY}"
export HUGGINGFACE_API_KEY="${HUGGINGFACE_API_KEY}"
export NEW_API_KEY="${NEW_API_KEY}"

# Ports
export WEB_PORT=8000
export API_PORT=8080
export HTTPS_PORT=8443
export MONITORING_PORT=9090

# Resource Requirements
export MIN_MEMORY=16384  # 16GB for AGI
export MIN_DISK=204800   # 200GB
export MIN_CPU_CORES=16
export MIN_SWAP=16384    # 16GB

# Logging
export LOG_FILE="${LOG_DIR}/ai_platform_setup.log"
export LOG_MAX_SIZE="100M"
export LOG_BACKUP_COUNT=5

# Bug Management Configuration
export BUG_DETECTION_INTERVAL=3600  # Run detection hourly
export BUG_FIX_TIMEOUT=300         # 5 minute timeout per fix
export BUG_REPORT_PATH="${LOG_DIR}/bug_reports"

# Quality Gates
export MIN_TEST_COVERAGE=80
export MAX_COMPLEXITY=10
export MAX_ISSUES_PER_FILE=5
export MAX_ISSUES_TOTAL=50

# Bug Fix Automation
export AUTO_FIX_ENABLED=true
export AUTO_FIX_SEVERITY_THRESHOLD="high"
export REQUIRE_MANUAL_APPROVAL=false

# JWT Configuration
export JWT_SECRET_KEY="${JWT_SECRET_KEY}"
export JWT_ISSUER="ai-platform"
export JWT_EXPIRATION=3600

# GPU Components
export NVIDIA_DRIVER_VERSION="535.113.01"
export CUDA_VERSION="12.2.0"
export CUDNN_VERSION="8.9.5"
export TENSORRT_VERSION="8.6.3"

# Security Components
export TRIVY_VERSION="0.43.1"
export FALCO_VERSION="0.35.0"
export CERT_MANAGER_VERSION="1.14.2"
export GATEKEEPER_VERSION="3.13.1"

# Logging Stack
export ELASTICSEARCH_VERSION="8.10.0"
export LOGSTASH_VERSION="8.10.0"
export KIBANA_VERSION="8.10.0"
export LOKI_VERSION="2.8.4"
export PROMTAIL_VERSION="2.8.4"

# Monitoring Stack
export PROMETHEUS_VERSION="2.46.0"
export GRAFANA_VERSION="10.1.0"
export OPENTELEMETRY_VERSION="1.1.0"
export JAEGER_VERSION="1.48.0"

# Resource Management
export KUBE_STATE_METRICS_VERSION="2.9.3"
export METRICS_SERVER_VERSION="0.6.5"
export NODE_PROBLEM_DETECTOR_VERSION="0.8.13"

# CI/CD Components
export JENKINS_VERSION="2.401.4"
export ARGO_CD_VERSION="2.8.0"
export ARGO_ROLLOUTS_VERSION="1.5.2"

# CI/CD Settings
export CI_REGISTRY="docker.io"
export CI_REGISTRY_USER="${DOCKER_USERNAME}"
export CI_REGISTRY_PASSWORD="${DOCKER_PASSWORD}"
export CI_DEPLOY_ENVIRONMENT="production"
export CI_AUTO_DEPLOY=true
export CI_NOTIFICATION_CHANNEL="ai-platform-deployments"

# Deployment Settings
export DEPLOY_STRATEGY="rolling"
export DEPLOY_TIMEOUT="300"
export DEPLOY_REPLICAS=3
export DEPLOY_MAX_SURGE="25%"
export DEPLOY_MAX_UNAVAILABLE="25%"

# Dependency Management
export KUSTOMIZE_VERSION="5.1.1"

# Checksums for security verification
export DOCKER_CHECKSUM="sha256:a1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
export KUBECTL_CHECKSUM="sha256:b1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
export HELM_CHECKSUM="sha256:90abcdef1234567890abcdef1234567890abcdef1234567890abcdef12345678"

# Admin password for Grafana
export GRAFANA_ADMIN_PASSWORD="${GRAFANA_ADMIN_PASSWORD}"

# Backup configuration
export AZURE_STORAGE_ACCOUNT="your-azure-storage-account"
export AZURE_STORAGE_CONTAINER="your-azure-storage-container"

# System Requirements
export MIN_MEMORY=16384
export MIN_CPU_CORES=16
export MIN_TEST_COVERAGE=80

# Kubernetes Namespaces
declare -a NAMESPACES=(
    "ai-platform"
    "monitoring"
    "security"
)

# Component Versions and Checksums
export DOCKER_VERSION="24.0.7"
export DOCKER_CHECKSUM="sha256:a1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
export DOCKER_FILE_PATH="/usr/bin/docker"

export KUBECTL_VERSION="1.28.3"
export KUBECTL_CHECKSUM="sha256:b1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
export KUBECTL_FILE_PATH="/usr/local/bin/kubectl"

# Configuration and Modules Directories
export CONFIG_DIR="/workspaces/AI/ai-platform-setup/config"
export MODULES_DIR="/workspaces/AI/ai-platform-setup/modules"

# Set restricted permissions for ai_platform_setup.conf
chmod 600 /workspaces/AI/ai-platform-setup/config/ai_platform_setup.conf